{"ast":null,"code":"import _slicedToArray from \"C:/Users/aayush/Documents/GitHub/book_exchange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nexport default function useToken() {\n  _s();\n\n  var getToken = function getToken() {\n    var tokenString = sessionStorage.getItem(\"token\");\n    var userToken = JSON.parse(tokenString);\n    return userToken === null || userToken === void 0 ? void 0 : userToken.token;\n  };\n\n  var _useState = useState(getToken()),\n      _useState2 = _slicedToArray(_useState, 2),\n      token = _useState2[0],\n      setToken = _useState2[1];\n\n  var saveToken = function saveToken(userToken) {\n    sessionStorage.setItem(\"token\", JSON.stringify(userToken));\n    setToken(userToken.token);\n  };\n\n  return {\n    setToken: saveToken,\n    token: token\n  };\n}\n\n_s(useToken, \"YxmPjHzwYO/ewBTUGNAd/YBNtug=\");","map":{"version":3,"sources":["C:/Users/aayush/Documents/GitHub/book_exchange/src/useToken.js"],"names":["useState","useToken","getToken","tokenString","sessionStorage","getItem","userToken","JSON","parse","token","setToken","saveToken","setItem","stringify"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,QAAMC,WAAW,GAAGC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAApB;AACA,QAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWL,WAAX,CAAlB;AACA,WAAOG,SAAP,aAAOA,SAAP,uBAAOA,SAAS,CAAEG,KAAlB;AACD,GAJD;;AADiC,kBAOPT,QAAQ,CAACE,QAAQ,EAAT,CAPD;AAAA;AAAA,MAO1BO,KAP0B;AAAA,MAOnBC,QAPmB;;AASjC,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACL,SAAD,EAAe;AAC/BF,IAAAA,cAAc,CAACQ,OAAf,CAAuB,OAAvB,EAAgCL,IAAI,CAACM,SAAL,CAAeP,SAAf,CAAhC;AACAI,IAAAA,QAAQ,CAACJ,SAAS,CAACG,KAAX,CAAR;AACD,GAHD;;AAKA,SAAO;AACLC,IAAAA,QAAQ,EAAEC,SADL;AAELF,IAAAA,KAAK,EAALA;AAFK,GAAP;AAID;;GAlBuBR,Q","sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function useToken() {\r\n  const getToken = () => {\r\n    const tokenString = sessionStorage.getItem(\"token\");\r\n    const userToken = JSON.parse(tokenString);\r\n    return userToken?.token;\r\n  };\r\n\r\n  const [token, setToken] = useState(getToken());\r\n\r\n  const saveToken = (userToken) => {\r\n    sessionStorage.setItem(\"token\", JSON.stringify(userToken));\r\n    setToken(userToken.token);\r\n  };\r\n\r\n  return {\r\n    setToken: saveToken,\r\n    token\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}